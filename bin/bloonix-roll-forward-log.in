#!@@PERL@@
use strict;
use warnings;
use Bloonix::Config;
use Bloonix::REST;
use Bloonix::SwitchUser;
use IO::Handle;
use JSON;

Bloonix::SwitchUser->to("bloonix");

$SIG{HUP} = $SIG{INT} = $SIG{TERM} = "IGNORE";

my $i = 0;
my $json = JSON->new;
my $config_file = "@@CONFDIR@@/bloonix/server/main.conf";
my $config = Bloonix::Config->parse($config_file);
my $rest = Bloonix::REST->new(%{$config->{elasticsearch}});
my $trlog = $config->{elasticsearch_roll_forward} || "/var/log/bloonix/elasticsearch-roll-forward.json";

if (!-e $trlog) {
    print "no transaction log found\n";
    exit 0;
}

if (-e "$trlog.import.count" && -e "$trlog.import") {
    open my $fh, "<", "$trlog.import.count" or die $!;
    $i = do { local $/; <$fh> };
    close $fh;
} else {
    system("mv $trlog $trlog.import");
}

sleep 5;

open my $out, ">>", $trlog or die $!;
open my $cnt, ">", "$trlog.import.count" or die $!;
open my $in, "<", "$trlog.import" or die $!;

$out->autoflush(1);
$cnt->autoflush(1);

if ($i) {
    my $x = 0;
    while (<$in>) { last if ++$x == $i }
}

my @bulkdata;
my @jsondata;

while (my $line = <$in>) {
    $i++; print "processing line $i\r";
    push @jsondata, $line;

    my $req = $json->decode($line);
    my $data = $req->{data};
    my $path = $req->{path};

    if ($path =~ m!^(bloonix-\d\d\d\d-\d\d)/(.+?)/\?routing=(\d+)!) {
        push @bulkdata, $json->encode({ index => { "_index" => $1, "_type" => $2, "_routing" => $3 }});
        push @bulkdata, $json->encode($data);
        if (@bulkdata >= 20000) {
            if (!$rest->post(path => "/_bulk", data => join("\n", @bulkdata))) {
                print $out join("", @jsondata);
                print $rest->errstr;
            }
            @bulkdata = ();
            @jsondata = ();
        }
    } else {
        print $out $line;
    }

    seek($cnt, 0, 0);
    print $cnt $i;
}

if (@bulkdata) {
    if (!$rest->post(path => "/_bulk", data => join("\n", @bulkdata))) {
        print $out join("", @jsondata);
    }
}

print "\n";
close $in;
close $out;
close $cnt;

unlink "$trlog.import.count";
unlink "$trlog.import";
